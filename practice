#ifndef LIBRARY_SYSTEM_H
#define LIBRARY_SYSTEM_H

#include <string>
#include <vector>

class LibraryItem {
private:
    std::string title;
    bool isCheckedOut;
    std::string dueDate;

public:
    LibraryItem(std::string title);
    std::string getTitle() const;
    void checkOut();
    void returnItem();
};

class BookItem : public LibraryItem {
private:
    std::string author;
    std::string isbn;

public:
    BookItem(std::string title, std::string author, std::string isbn);
    std::string getAuthor() const;
    std::string getISBN() const;
};

class PatronRecord {
private:
    std::vector<BookItem> checkedOutBooks;

public:
    void addBook(const BookItem& book);
    void removeBook(const BookItem& book);
};

class Book {
private:
    std::string title;
    std::string author;
    std::string isbn;

public:
    Book(std::string title, std::string author, std::string isbn);
    std::string getTitle() const;
    std::string getAuthor() const;
    std::string getISBN() const;
};

class Patron {
private:
    std::string name;
    std::string libraryCardNumber;

public:
    Patron(std::string name, std::string libraryCardNumber);
    std::string getName() const;
    std::string getLibraryCardNumber() const;
};

class Library {
private:
    std::vector<BookItem> books;
    std::vector<Patron> patrons;
    std::vector<PatronRecord> patronRecords;

public:
    void addBook(const BookItem& book);
    void addPatron(const Patron& patron);
    void borrowBook(const Patron& patron, const BookItem& book);
    void returnBook(const Patron& patron, const BookItem& book);
};

#endif // LIBRARY_SYSTEM_H
